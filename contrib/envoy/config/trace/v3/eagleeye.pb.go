// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: contrib/envoy/config/trace/v3/eagleeye.proto

package tracev3

import (
	_ "github.com/cncf/xds/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the EagleEye tracer.
//  [#extension: envoy.tracers.eagleeye]
type EagleEyeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The flag of open rpc logging. if not specified, the default is true.
	TurnOnRpcLog bool `protobuf:"varint,1,opt,name=turn_on_rpc_log,json=turnOnRpcLog,proto3" json:"turn_on_rpc_log,omitempty"`
	// The flag of open business logging. if not specified, the default is false.
	TurnOnBusinessLog bool `protobuf:"varint,2,opt,name=turn_on_business_log,json=turnOnBusinessLog,proto3" json:"turn_on_business_log,omitempty"`
	// Log sampling interval, value range [1, 9000].
	SamplingInterval uint32 `protobuf:"varint,3,opt,name=sampling_interval,json=samplingInterval,proto3" json:"sampling_interval,omitempty"`
	// The flag that passes user data to the other end. if not specified, the default is true.
	PassUserData bool `protobuf:"varint,4,opt,name=pass_user_data,json=passUserData,proto3" json:"pass_user_data,omitempty"`
}

func (x *EagleEyeConfig) Reset() {
	*x = EagleEyeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contrib_envoy_config_trace_v3_eagleeye_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EagleEyeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EagleEyeConfig) ProtoMessage() {}

func (x *EagleEyeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_config_trace_v3_eagleeye_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EagleEyeConfig.ProtoReflect.Descriptor instead.
func (*EagleEyeConfig) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescGZIP(), []int{0}
}

func (x *EagleEyeConfig) GetTurnOnRpcLog() bool {
	if x != nil {
		return x.TurnOnRpcLog
	}
	return false
}

func (x *EagleEyeConfig) GetTurnOnBusinessLog() bool {
	if x != nil {
		return x.TurnOnBusinessLog
	}
	return false
}

func (x *EagleEyeConfig) GetSamplingInterval() uint32 {
	if x != nil {
		return x.SamplingInterval
	}
	return 0
}

func (x *EagleEyeConfig) GetPassUserData() bool {
	if x != nil {
		return x.PassUserData
	}
	return false
}

var File_contrib_envoy_config_trace_v3_eagleeye_proto protoreflect.FileDescriptor

var file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x33, 0x2f,
	0x65, 0x61, 0x67, 0x6c, 0x65, 0x65, 0x79, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x33, 0x1a, 0x1e, 0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01,
	0x0a, 0x0e, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x45, 0x79, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x25, 0x0a, 0x0f, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x5f,
	0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x4f,
	0x6e, 0x52, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x6f, 0x6e, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x37, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x2a, 0x05, 0x18, 0xa8, 0x46, 0x28, 0x01, 0x52,
	0x10, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x84, 0x01, 0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02,
	0x10, 0x02, 0x0a, 0x23, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x33, 0x42, 0x0d, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x65, 0x79,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x2f, 0x76, 0x33, 0x3b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x76, 0x33, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescOnce sync.Once
	file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescData = file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDesc
)

func file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescGZIP() []byte {
	file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescOnce.Do(func() {
		file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescData = protoimpl.X.CompressGZIP(file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescData)
	})
	return file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDescData
}

var file_contrib_envoy_config_trace_v3_eagleeye_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_contrib_envoy_config_trace_v3_eagleeye_proto_goTypes = []interface{}{
	(*EagleEyeConfig)(nil), // 0: envoy.config.trace.v3.EagleEyeConfig
}
var file_contrib_envoy_config_trace_v3_eagleeye_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_contrib_envoy_config_trace_v3_eagleeye_proto_init() }
func file_contrib_envoy_config_trace_v3_eagleeye_proto_init() {
	if File_contrib_envoy_config_trace_v3_eagleeye_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contrib_envoy_config_trace_v3_eagleeye_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EagleEyeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contrib_envoy_config_trace_v3_eagleeye_proto_goTypes,
		DependencyIndexes: file_contrib_envoy_config_trace_v3_eagleeye_proto_depIdxs,
		MessageInfos:      file_contrib_envoy_config_trace_v3_eagleeye_proto_msgTypes,
	}.Build()
	File_contrib_envoy_config_trace_v3_eagleeye_proto = out.File
	file_contrib_envoy_config_trace_v3_eagleeye_proto_rawDesc = nil
	file_contrib_envoy_config_trace_v3_eagleeye_proto_goTypes = nil
	file_contrib_envoy_config_trace_v3_eagleeye_proto_depIdxs = nil
}
