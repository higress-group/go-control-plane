// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: contrib/envoy/extensions/filters/http/xmodule/v3/filter.proto

package xmodulev3

import (
	_ "github.com/cncf/xds/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminMode    bool   `protobuf:"varint,1,opt,name=admin_mode,json=adminMode,proto3" json:"admin_mode,omitempty"`
	Disable      bool   `protobuf:"varint,2,opt,name=disable,proto3" json:"disable,omitempty"`
	MatchedHost  string `protobuf:"bytes,3,opt,name=matched_host,json=matchedHost,proto3" json:"matched_host,omitempty"`
	SaveVariable bool   `protobuf:"varint,4,opt,name=save_variable,json=saveVariable,proto3" json:"save_variable,omitempty"`
	// max decode buffer limit
	MaxDecodeBufferLimit uint32 `protobuf:"varint,5,opt,name=max_decode_buffer_limit,json=maxDecodeBufferLimit,proto3" json:"max_decode_buffer_limit,omitempty"`
}

func (x *ConfigProto) Reset() {
	*x = ConfigProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigProto) ProtoMessage() {}

func (x *ConfigProto) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigProto.ProtoReflect.Descriptor instead.
func (*ConfigProto) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigProto) GetAdminMode() bool {
	if x != nil {
		return x.AdminMode
	}
	return false
}

func (x *ConfigProto) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *ConfigProto) GetMatchedHost() string {
	if x != nil {
		return x.MatchedHost
	}
	return ""
}

func (x *ConfigProto) GetSaveVariable() bool {
	if x != nil {
		return x.SaveVariable
	}
	return false
}

func (x *ConfigProto) GetMaxDecodeBufferLimit() uint32 {
	if x != nil {
		return x.MaxDecodeBufferLimit
	}
	return 0
}

type PerRouteConfigProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disable     bool   `protobuf:"varint,1,opt,name=disable,proto3" json:"disable,omitempty"`
	MatchedHost string `protobuf:"bytes,2,opt,name=matched_host,json=matchedHost,proto3" json:"matched_host,omitempty"`
}

func (x *PerRouteConfigProto) Reset() {
	*x = PerRouteConfigProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerRouteConfigProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerRouteConfigProto) ProtoMessage() {}

func (x *PerRouteConfigProto) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerRouteConfigProto.ProtoReflect.Descriptor instead.
func (*PerRouteConfigProto) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescGZIP(), []int{1}
}

func (x *PerRouteConfigProto) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *PerRouteConfigProto) GetMatchedHost() string {
	if x != nil {
		return x.MatchedHost
	}
	return ""
}

// [#next-free-field: 16]
type BootstrapConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// XAgent module.json path
	ConfigPath string `protobuf:"bytes,1,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	// check XAgent module.json update interval
	ConfigCheckRate uint32 `protobuf:"varint,2,opt,name=config_check_rate,json=configCheckRate,proto3" json:"config_check_rate,omitempty"`
	AgentSock       string `protobuf:"bytes,3,opt,name=agent_sock,json=agentSock,proto3" json:"agent_sock,omitempty"`
	PunishCluster   string `protobuf:"bytes,4,opt,name=punish_cluster,json=punishCluster,proto3" json:"punish_cluster,omitempty"`
	// punish center host name
	PunishHost string `protobuf:"bytes,5,opt,name=punish_host,json=punishHost,proto3" json:"punish_host,omitempty"`
	// punish center uri prefix
	X5Proxy string `protobuf:"bytes,6,opt,name=x5_proxy,json=x5Proxy,proto3" json:"x5_proxy,omitempty"`
	// log producer name
	FlowSlsProducer string `protobuf:"bytes,7,opt,name=flow_sls_producer,json=flowSlsProducer,proto3" json:"flow_sls_producer,omitempty"`
	// local watch dog port
	SlsPort uint32 `protobuf:"varint,8,opt,name=sls_port,json=slsPort,proto3" json:"sls_port,omitempty"`
	// gzip decompress buffer size
	DecompressBufferSize uint32 `protobuf:"varint,9,opt,name=decompress_buffer_size,json=decompressBufferSize,proto3" json:"decompress_buffer_size,omitempty"`
	// send buffer size
	SndbufSize uint32 `protobuf:"varint,10,opt,name=sndbuf_size,json=sndbufSize,proto3" json:"sndbuf_size,omitempty"`
	MaxIpcLen  uint32 `protobuf:"varint,11,opt,name=max_ipc_len,json=maxIpcLen,proto3" json:"max_ipc_len,omitempty"`
	// enable abnormal req report
	AbnormalReportEnable bool `protobuf:"varint,12,opt,name=abnormal_report_enable,json=abnormalReportEnable,proto3" json:"abnormal_report_enable,omitempty"`
	// enable cloud mode
	CloudMode bool `protobuf:"varint,13,opt,name=cloud_mode,json=cloudMode,proto3" json:"cloud_mode,omitempty"`
	// cloud mode region
	Region string `protobuf:"bytes,14,opt,name=region,proto3" json:"region,omitempty"`
	// cloud mode cluster
	Cluster string `protobuf:"bytes,15,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *BootstrapConfig) Reset() {
	*x = BootstrapConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapConfig) ProtoMessage() {}

func (x *BootstrapConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapConfig.ProtoReflect.Descriptor instead.
func (*BootstrapConfig) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescGZIP(), []int{2}
}

func (x *BootstrapConfig) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *BootstrapConfig) GetConfigCheckRate() uint32 {
	if x != nil {
		return x.ConfigCheckRate
	}
	return 0
}

func (x *BootstrapConfig) GetAgentSock() string {
	if x != nil {
		return x.AgentSock
	}
	return ""
}

func (x *BootstrapConfig) GetPunishCluster() string {
	if x != nil {
		return x.PunishCluster
	}
	return ""
}

func (x *BootstrapConfig) GetPunishHost() string {
	if x != nil {
		return x.PunishHost
	}
	return ""
}

func (x *BootstrapConfig) GetX5Proxy() string {
	if x != nil {
		return x.X5Proxy
	}
	return ""
}

func (x *BootstrapConfig) GetFlowSlsProducer() string {
	if x != nil {
		return x.FlowSlsProducer
	}
	return ""
}

func (x *BootstrapConfig) GetSlsPort() uint32 {
	if x != nil {
		return x.SlsPort
	}
	return 0
}

func (x *BootstrapConfig) GetDecompressBufferSize() uint32 {
	if x != nil {
		return x.DecompressBufferSize
	}
	return 0
}

func (x *BootstrapConfig) GetSndbufSize() uint32 {
	if x != nil {
		return x.SndbufSize
	}
	return 0
}

func (x *BootstrapConfig) GetMaxIpcLen() uint32 {
	if x != nil {
		return x.MaxIpcLen
	}
	return 0
}

func (x *BootstrapConfig) GetAbnormalReportEnable() bool {
	if x != nil {
		return x.AbnormalReportEnable
	}
	return false
}

func (x *BootstrapConfig) GetCloudMode() bool {
	if x != nil {
		return x.CloudMode
	}
	return false
}

func (x *BootstrapConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *BootstrapConfig) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

var File_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto protoreflect.FileDescriptor

var file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x78, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f,
	0x76, 0x33, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x28, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x78,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x33, 0x1a, 0x1d, 0x75, 0x64, 0x70, 0x61, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x75, 0x64, 0x70, 0x61, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x52, 0x0a, 0x13,
	0x50, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74,
	0x22, 0xc0, 0x04, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2a,
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0a, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f,
	0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x0e, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0d, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x78, 0x35, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x78, 0x35, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2a,
	0x0a, 0x11, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x6c, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x53,
	0x6c, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c,
	0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6c,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6e, 0x64, 0x62, 0x75, 0x66, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x6e, 0x64, 0x62, 0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x5f, 0x69, 0x70, 0x63, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x49, 0x70, 0x63, 0x4c, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x16,
	0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x62,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x42, 0xaa, 0x01, 0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02, 0x10, 0x02, 0x0a, 0x36,
	0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x33, 0x42, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x67, 0x6f, 0x2d,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x78, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2f, 0x76, 0x33, 0x3b, 0x78, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x76, 0x33,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescOnce sync.Once
	file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescData = file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDesc
)

func file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescGZIP() []byte {
	file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescOnce.Do(func() {
		file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescData = protoimpl.X.CompressGZIP(file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescData)
	})
	return file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDescData
}

var file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_goTypes = []interface{}{
	(*ConfigProto)(nil),         // 0: envoy.extensions.filters.http.xmodule.v3.ConfigProto
	(*PerRouteConfigProto)(nil), // 1: envoy.extensions.filters.http.xmodule.v3.PerRouteConfigProto
	(*BootstrapConfig)(nil),     // 2: envoy.extensions.filters.http.xmodule.v3.BootstrapConfig
}
var file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_init() }
func file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_init() {
	if File_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerRouteConfigProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_goTypes,
		DependencyIndexes: file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_depIdxs,
		MessageInfos:      file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_msgTypes,
	}.Build()
	File_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto = out.File
	file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_rawDesc = nil
	file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_goTypes = nil
	file_contrib_envoy_extensions_filters_http_xmodule_v3_filter_proto_depIdxs = nil
}
