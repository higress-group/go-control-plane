// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: contrib/envoy/extensions/custom_cluster_plugins/cluster_fallback/v3/cluster_fallback.proto

package cluster_fallbackv3

import (
	_ "github.com/cncf/xds/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterFallbackConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ConfigSpecifier:
	//	*ClusterFallbackConfig_ClusterConfig_
	//	*ClusterFallbackConfig_WeightedClusterConfig_
	ConfigSpecifier isClusterFallbackConfig_ConfigSpecifier `protobuf_oneof:"config_specifier"`
}

func (x *ClusterFallbackConfig) Reset() {
	*x = ClusterFallbackConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterFallbackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterFallbackConfig) ProtoMessage() {}

func (x *ClusterFallbackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterFallbackConfig.ProtoReflect.Descriptor instead.
func (*ClusterFallbackConfig) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescGZIP(), []int{0}
}

func (m *ClusterFallbackConfig) GetConfigSpecifier() isClusterFallbackConfig_ConfigSpecifier {
	if m != nil {
		return m.ConfigSpecifier
	}
	return nil
}

func (x *ClusterFallbackConfig) GetClusterConfig() *ClusterFallbackConfig_ClusterConfig {
	if x, ok := x.GetConfigSpecifier().(*ClusterFallbackConfig_ClusterConfig_); ok {
		return x.ClusterConfig
	}
	return nil
}

func (x *ClusterFallbackConfig) GetWeightedClusterConfig() *ClusterFallbackConfig_WeightedClusterConfig {
	if x, ok := x.GetConfigSpecifier().(*ClusterFallbackConfig_WeightedClusterConfig_); ok {
		return x.WeightedClusterConfig
	}
	return nil
}

type isClusterFallbackConfig_ConfigSpecifier interface {
	isClusterFallbackConfig_ConfigSpecifier()
}

type ClusterFallbackConfig_ClusterConfig_ struct {
	ClusterConfig *ClusterFallbackConfig_ClusterConfig `protobuf:"bytes,1,opt,name=cluster_config,json=clusterConfig,proto3,oneof"`
}

type ClusterFallbackConfig_WeightedClusterConfig_ struct {
	WeightedClusterConfig *ClusterFallbackConfig_WeightedClusterConfig `protobuf:"bytes,2,opt,name=weighted_cluster_config,json=weightedClusterConfig,proto3,oneof"`
}

func (*ClusterFallbackConfig_ClusterConfig_) isClusterFallbackConfig_ConfigSpecifier() {}

func (*ClusterFallbackConfig_WeightedClusterConfig_) isClusterFallbackConfig_ConfigSpecifier() {}

type ClusterFallbackConfig_ClusterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutingCluster   string   `protobuf:"bytes,1,opt,name=routing_cluster,json=routingCluster,proto3" json:"routing_cluster,omitempty"`
	FallbackClusters []string `protobuf:"bytes,2,rep,name=fallback_clusters,json=fallbackClusters,proto3" json:"fallback_clusters,omitempty"`
}

func (x *ClusterFallbackConfig_ClusterConfig) Reset() {
	*x = ClusterFallbackConfig_ClusterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterFallbackConfig_ClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterFallbackConfig_ClusterConfig) ProtoMessage() {}

func (x *ClusterFallbackConfig_ClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterFallbackConfig_ClusterConfig.ProtoReflect.Descriptor instead.
func (*ClusterFallbackConfig_ClusterConfig) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ClusterFallbackConfig_ClusterConfig) GetRoutingCluster() string {
	if x != nil {
		return x.RoutingCluster
	}
	return ""
}

func (x *ClusterFallbackConfig_ClusterConfig) GetFallbackClusters() []string {
	if x != nil {
		return x.FallbackClusters
	}
	return nil
}

type ClusterFallbackConfig_WeightedClusterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config []*ClusterFallbackConfig_ClusterConfig `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty"`
}

func (x *ClusterFallbackConfig_WeightedClusterConfig) Reset() {
	*x = ClusterFallbackConfig_WeightedClusterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterFallbackConfig_WeightedClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterFallbackConfig_WeightedClusterConfig) ProtoMessage() {}

func (x *ClusterFallbackConfig_WeightedClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterFallbackConfig_WeightedClusterConfig.ProtoReflect.Descriptor instead.
func (*ClusterFallbackConfig_WeightedClusterConfig) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ClusterFallbackConfig_WeightedClusterConfig) GetConfig() []*ClusterFallbackConfig_ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto protoreflect.FileDescriptor

var file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDesc = []byte{
	0x0a, 0x5a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3b, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x33, 0x1a, 0x20, 0x75, 0x64, 0x70, 0x61, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x75, 0x64, 0x70,
	0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x04, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x46,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x89, 0x01,
	0x0a, 0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x46, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xa2, 0x01, 0x0a, 0x17, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x68, 0x2e, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x15, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65,
	0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x65,
	0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x78, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x60, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x12, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0xe2, 0x01,
	0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02, 0x10, 0x02, 0x0a, 0x49, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76,
	0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x2e, 0x76, 0x33, 0x42, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x46, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x75, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x33, 0x3b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescOnce sync.Once
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescData = file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDesc
)

func file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescGZIP() []byte {
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescOnce.Do(func() {
		file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescData = protoimpl.X.CompressGZIP(file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescData)
	})
	return file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDescData
}

var file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_goTypes = []interface{}{
	(*ClusterFallbackConfig)(nil),                       // 0: envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig
	(*ClusterFallbackConfig_ClusterConfig)(nil),         // 1: envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.ClusterConfig
	(*ClusterFallbackConfig_WeightedClusterConfig)(nil), // 2: envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.WeightedClusterConfig
}
var file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.cluster_config:type_name -> envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.ClusterConfig
	2, // 1: envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.weighted_cluster_config:type_name -> envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.WeightedClusterConfig
	1, // 2: envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.WeightedClusterConfig.config:type_name -> envoy.extensions.custom_cluster_plugins.cluster_fallback.v3.ClusterFallbackConfig.ClusterConfig
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() {
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_init()
}
func file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_init() {
	if File_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterFallbackConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterFallbackConfig_ClusterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterFallbackConfig_WeightedClusterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ClusterFallbackConfig_ClusterConfig_)(nil),
		(*ClusterFallbackConfig_WeightedClusterConfig_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_goTypes,
		DependencyIndexes: file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_depIdxs,
		MessageInfos:      file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_msgTypes,
	}.Build()
	File_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto = out.File
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_rawDesc = nil
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_goTypes = nil
	file_contrib_envoy_extensions_custom_cluster_plugins_cluster_fallback_v3_cluster_fallback_proto_depIdxs = nil
}
